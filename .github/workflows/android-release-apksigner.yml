name: Android CI - Build & Sign Release (apksigner)

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ANDROID_SDK_ROOT: ${{ runner.temp }}/android-sdk

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: temurin

    - name: Install prerequisites
      run: sudo apt-get update -y && sudo apt-get install -y unzip wget zip apksigner

    - name: Download Android cmdline-tools
      run: |
        mkdir -p "${ANDROID_SDK_ROOT}/cmdline-tools"
        cd "${ANDROID_SDK_ROOT}"
        TOOL_ZIP="commandlinetools-linux-11076708_latest.zip"
        wget -q -O cmdline-tools.zip "https://dl.google.com/android/repository/${TOOL_ZIP}"
        unzip -q -o cmdline-tools.zip -d cmdline-tools
        mkdir -p cmdline-tools/latest
        if [ -d cmdline-tools/cmdline-tools ]; then
          mv -f cmdline-tools/cmdline-tools/* cmdline-tools/latest/ || true
        else
          mv -f cmdline-tools/* cmdline-tools/latest/ || true
        fi
        rm -f cmdline-tools.zip

    - name: Accept licenses
      env:
        PATH: ${{ env.ANDROID_SDK_ROOT }}/cmdline-tools/latest/bin:${PATH}
      run: yes | sdkmanager --sdk_root="${ANDROID_SDK_ROOT}" --licenses || true

    - name: Install SDK components
      env:
        PATH: ${{ env.ANDROID_SDK_ROOT }}/cmdline-tools/latest/bin:${PATH}
      run: sdkmanager --sdk_root="${ANDROID_SDK_ROOT}" "platform-tools" "platforms;android-34" "build-tools;34.0.0"

    - name: Make gradlew executable
      run: chmod +x ./gradlew

    - name: Build unsigned release APK
      env:
        ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
        PATH: ${{ env.ANDROID_SDK_ROOT }}/cmdline-tools/latest/bin:${PATH}
      run: ./gradlew assembleRelease --no-daemon --stacktrace

    - name: Upload unsigned release (debug info)
      uses: actions/upload-artifact@v4
      with:
        name: app-release-unsigned
        path: '**/app/build/outputs/apk/release/*-unsigned.apk'

    - name: Prepare keystore (if provided)
      if: ${{ secrets.KEYSTORE_BASE64 != '' }}
      run: |
        echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > keystore.jks

    - name: Sign release APK with apksigner
      if: ${{ secrets.KEYSTORE_BASE64 != '' }}
      run: |
        unsigned=$(find . -type f -name "*-release-unsigned.apk" -print -quit)
        if [ -z "$unsigned" ]; then
          echo "No unsigned release APK found" && exit 1
        fi
        signed=./app-release-signed.apk
        apksigner sign --ks keystore.jks --ks-key-alias "${{ secrets.KEY_ALIAS }}" --ks-pass pass:${{ secrets.KEYSTORE_PASSWORD }} --key-pass pass:${{ secrets.KEY_PASSWORD }} --out "$signed" "$unsigned"
        ls -la "$signed"

    - name: Upload signed release APK
      if: ${{ secrets.KEYSTORE_BASE64 != '' }}
      uses: actions/upload-artifact@v4
      with:
        name: app-release-signed
        path: ./app-release-signed.apk
