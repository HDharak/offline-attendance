name: Android CI - Build & Sign Release (apksigner)

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: temurin

      - name: Install prerequisites
        run: |
          sudo apt-get update -y
          sudo apt-get install -y unzip wget zip apksigner

      - name: Download Android cmdline-tools
        run: |
          mkdir -p "${ANDROID_SDK_ROOT}/cmdline-tools"
          cd "${ANDROID_SDK_ROOT}"
          TOOL_ZIP="commandlinetools-linux-11076708_latest.zip"
          wget -q -O cmdline-tools.zip "https://dl.google.com/android/repository/${TOOL_ZIP}" || (echo "cmdline-tools download failed" && exit 2)
          unzip -q -o cmdline-tools.zip -d cmdline-tools
          mkdir -p cmdline-tools/latest
          if [ -d cmdline-tools/cmdline-tools ]; then
            mv -f cmdline-tools/cmdline-tools/* cmdline-tools/latest/ || true
          else
            mv -f cmdline-tools/* cmdline-tools/latest/ || true
          fi
          rm -f cmdline-tools.zip

      - name: Accept licenses (sdkmanager on PATH for this step)
        run: |
          export PATH="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH"
          yes | sdkmanager --sdk_root="${ANDROID_SDK_ROOT}" --licenses || true

      - name: Install SDK components
        run: |
          export PATH="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH"
          sdkmanager --sdk_root="${ANDROID_SDK_ROOT}" "platform-tools" "platforms;android-34" "build-tools;34.0.0"

      - name: Make gradlew executable and build unsigned release APK
        run: |
          export PATH="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH"
          chmod +x ./gradlew
          ./gradlew assembleRelease --no-daemon --stacktrace
        env:
          ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk

      - name: Upload unsigned release (debug info)
        uses: actions/upload-artifact@v4
        with:
          name: app-release-unsigned
          path: '**/app/build/outputs/apk/release/*-unsigned.apk'

      - name: Prepare keystore and sign if KEYSTORE_BASE64 secret set
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          if [ -z "${KEYSTORE_BASE64}" ]; then
            echo "No KEYSTORE_BASE64 secret provided â€” skipping signing step."
            exit 0
          fi

          echo "Decoding keystore..."
          echo "${KEYSTORE_BASE64}" | base64 -d > keystore.jks

          unsigned=$(find . -type f -name "*-release-unsigned.apk" -print -quit)
          if [ -z "$unsigned" ]; then
            echo "No unsigned release APK found; cannot sign." >&2
            exit 1
          fi

          echo "Signing $unsigned -> app-release-signed.apk"
          apksigner sign --ks keystore.jks \
            --ks-key-alias "${KEY_ALIAS}" \
            --ks-pass pass:"${KEYSTORE_PASSWORD}" \
            --key-pass pass:"${KEY_PASSWORD}" \
            --out ./app-release-signed.apk "$unsigned"

          ls -la ./app-release-signed.apk

      - name: Upload signed release APK (if created)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-release-signed
          path: ./app-release-signed.apk